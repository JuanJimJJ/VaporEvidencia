// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VaporApp.Infrastructure.Persistance;

namespace VaporApp.Infrastructure.Migrations
{
    [DbContext(typeof(DBVaporContext))]
    [Migration("20220621230337_DBMigration")]
    partial class DBMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VaporApp.Domain.Entities.Categories", b =>
                {
                    b.Property<int>("IdCategory")
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("IdCategory")
                        .HasName("PK__Categori__CBD74706984C2209");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("VaporApp.Domain.Entities.OrderDetails", b =>
                {
                    b.Property<int>("IdOrderDetails")
                        .HasColumnType("int");

                    b.Property<short>("DetailAmount")
                        .HasColumnType("smallint");

                    b.Property<double>("DetailPrice")
                        .HasColumnType("float");

                    b.Property<int>("IdOrder")
                        .HasColumnType("int");

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.HasKey("IdOrderDetails")
                        .HasName("PK__OrderDet__8D4849D6D8A882DE");

                    b.HasIndex("IdOrder");

                    b.HasIndex("IdProduct");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("VaporApp.Domain.Entities.Orders", b =>
                {
                    b.Property<int>("IdOrder")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("OrderCity")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("OrderCountry")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("date");

                    b.Property<string>("OrderShippingAddress")
                        .IsRequired()
                        .HasColumnType("varchar(80)")
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<string>("OrderState")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("OrderZipCode")
                        .IsRequired()
                        .HasColumnType("varchar(13)")
                        .HasMaxLength(13)
                        .IsUnicode(false);

                    b.HasKey("IdOrder")
                        .HasName("PK__Orders__C38F300902C34BB8");

                    b.HasIndex("IdUser");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("VaporApp.Domain.Entities.ProductCategories", b =>
                {
                    b.Property<int>("IdProductCategory")
                        .HasColumnType("int");

                    b.Property<int>("IdCategory")
                        .HasColumnType("int");

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.HasKey("IdProductCategory")
                        .HasName("PK__ProductC__94B65A4226FE35B8");

                    b.HasIndex("IdCategory");

                    b.HasIndex("IdProduct");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("VaporApp.Domain.Entities.Products", b =>
                {
                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("varchar(40)")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<double>("ProductPrice")
                        .HasColumnType("float");

                    b.Property<byte>("ProductReview")
                        .HasColumnType("tinyint");

                    b.Property<string>("ProductSku")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<short>("ProductStock")
                        .HasColumnType("smallint");

                    b.HasKey("IdProduct")
                        .HasName("PK__Products__2E8946D499A458F6");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("VaporApp.Domain.Entities.Users", b =>
                {
                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("UserAddress")
                        .IsRequired()
                        .HasColumnType("varchar(80)")
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<string>("UserCity")
                        .IsRequired()
                        .HasColumnType("varchar(25)")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("UserCountry")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("UserFirstName")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("UserLastName")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("UserMiddleName")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("UserPhone")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("UserState")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("UserZipcode")
                        .IsRequired()
                        .HasColumnName("UserZIPCode")
                        .HasColumnType("varchar(13)")
                        .HasMaxLength(13)
                        .IsUnicode(false);

                    b.HasKey("IdUser")
                        .HasName("PK__Users__B7C92638C0C46A3E");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("VaporApp.Domain.Entities.OrderDetails", b =>
                {
                    b.HasOne("VaporApp.Domain.Entities.Orders", "IdOrderNavigation")
                        .WithMany("OrderDetails")
                        .HasForeignKey("IdOrder")
                        .HasConstraintName("FK__OrderDeta__IdOrd__3B75D760")
                        .IsRequired();

                    b.HasOne("VaporApp.Domain.Entities.Products", "IdProductNavigation")
                        .WithMany("OrderDetails")
                        .HasForeignKey("IdProduct")
                        .HasConstraintName("FK__OrderDeta__IdPro__3C69FB99")
                        .IsRequired();
                });

            modelBuilder.Entity("VaporApp.Domain.Entities.Orders", b =>
                {
                    b.HasOne("VaporApp.Domain.Entities.Users", "IdUserNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("FK__Orders__IdUser__38996AB5")
                        .IsRequired();
                });

            modelBuilder.Entity("VaporApp.Domain.Entities.ProductCategories", b =>
                {
                    b.HasOne("VaporApp.Domain.Entities.Categories", "IdCategoryNavigation")
                        .WithMany("ProductCategories")
                        .HasForeignKey("IdCategory")
                        .HasConstraintName("FK__ProductCa__IdCat__403A8C7D")
                        .IsRequired();

                    b.HasOne("VaporApp.Domain.Entities.Products", "IdProductNavigation")
                        .WithMany("ProductCategories")
                        .HasForeignKey("IdProduct")
                        .HasConstraintName("FK__ProductCa__IdPro__3F466844")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
